org: gfc0r
service: api-alumno         

provider:
  name: aws
  runtime: python3.13
  region: us-east-1
  memorySize: 1024
  timeout: 30

  # rol IAM ya provisto por el laboratorio / cuenta
  iam:
    role: arn:aws:iam::570699102669:role/LabRole

  # variables de entorno comunes
  environment:
    TABLE_NAME: ${sls:stage}-t_alumnos_canvas
    SNS_TOPIC_ARN: arn:aws:sns:${aws:region}:570699102669:NuevoAlumno

functions:
  # 1) Lambda que recibe vía HTTP y publica en SNS
  crear:
    handler: CrearAlumno.lambda_handler
    events:
      - httpApi:
          path: /alumno/crear
          method: post
          cors: true          # CORS abierto (ajusta si necesitas)

  # 2) Lambda que consume del tópico SNS con filtro tenant_id = "UTEC"
  procesar:
    handler: ProcesarAlumno.lambda_handler
    events:
      - sns:
          arn: ${self:provider.environment.SNS_TOPIC_ARN}
          topicName: NuevoAlumno
          filterPolicy:
            tenant_id:
              - UTEC

resources:
  Resources:
    TablaAlumnosCanvas:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:provider.environment.TABLE_NAME}
        AttributeDefinitions:
          - AttributeName: tenant_id
            AttributeType: S
          - AttributeName: alumno_id
            AttributeType: S
        KeySchema:
          - AttributeName: tenant_id
            KeyType: HASH
          - AttributeName: alumno_id
            KeyType: RANGE
        BillingMode: PAY_PER_REQUEST   # on-demand
